#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DEPLOY_ROOT_DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"
export DEPLOY_ROOT_DIR

# shellcheck disable=SC1091
source "$DEPLOY_ROOT_DIR/src/common.bash"

# shellcheck disable=SC1091
source "$DEPLOY_ROOT_DIR/src/functions.bash"

# Switch to the GitLab Agent context if needed.
# This configuration is also used in the default `before_script`
# of the `.gitlab-ci-template.yml`. In some rare cases, the `before_script`
# section is completely overridden in the project's jobs.
# To avoid any issues, we call the `setup-gitlab-agent` function also here.
setup-gitlab-agent

# Proceed with the other steps.
create-ns-and-developer-role-bindings

# Change permission of KUBECONFIG to avoid warnings.
if [ -n "$KUBECONFIG" ] && [ -f "$KUBECONFIG" ]; then
  chmod 600 "$KUBECONFIG" || echo "Warning: Failed to change permissions of KUBECONFIG file" >&2
else
  echo "Warning: KUBECONFIG is not set or file does not exist" >&2
fi

# Init helm.
helm-init
