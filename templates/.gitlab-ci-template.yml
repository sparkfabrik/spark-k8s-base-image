image: ghcr.io/sparkfabrik/spark-k8s-deployer:latest

services:
  - name: docker:23.0.6-dind
    command:
      [
        "--registry-mirror",
        "https://mirror.gcr.io",
        "--mtu=1300",
        "--network-control-plane-mtu=1300",
      ]

variables:
  # When using dind service, we need to instruct docker to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket.
  DOCKER_HOST: tcp://docker:2376
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2376 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2376
  #
  # Specify to Docker where to create the certificates, Docker will
  # create them automatically on boot, and will create
  # `/certs/client` that will be shared between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"
  # These are usually specified by the entrypoint, however the
  # Kubernetes executor doesn't run entrypoints
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4125
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  # Variables for defining dev team access to the deployment namespace.
  # Currently, only development/review branches in GCP are supported; groups
  # are supported as long as "Google Groups for RBAC" are enabled on the target
  # cluster.
  # See `scripts/templates/rbac` for role definitions.
  # Values should be comma-separated lists of users and groups.
  DEV_VIEWER_USERS: ""
  DEV_VIEWER_GROUPS: ""
  DEV_DEVELOPER_USERS: ""
  DEV_DEVELOPER_GROUPS: ""

.global-setup:
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27384#note_497228752
  before_script: &script-global-docker-wait
    - |
      if command -v docker &> /dev/null; then
         for i in $(seq 1 30)
         do
           docker info && break
           echo "Waiting for docker to start..."
           sleep 1s
         done
      fi
      if command -v docker-compose &> /dev/null; then
        docker-compose version
      fi
      if command -v gcloud &> /dev/null; then
        gcloud version

        echo "Configuring docker credentials for gcloud registries..."
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

        if command -v jq &> /dev/null; then
          echo "The following docker credHelpers are configured:"
          jq '.credHelpers' ~/.docker/config.json
        fi
      fi

before_script:
  - *script-global-docker-wait

include:
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/cloudsql-db-dump.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/drupal-phpqa.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/enable-buildx.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/gitops-argo-sync.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/gitops-sync-to-infrastructure-repo.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/kaniko-drupal-nginx-build.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/kaniko-drupal-php-build.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/rollback-release.yml"
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/jobs/stop-environment.yml"
