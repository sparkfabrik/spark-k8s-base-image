# Helm push: https://helm.sh/docs/helm/helm_push/
# Helm and OCI registries: https://helm.sh/docs/topics/registries/
# This Gitlab job template enables the push of an Helm Chart on the specified OCI registry.
# Variables to configure to use the job template:
#   OCI_HOST: The host of the OCI registry (e.g.: `europe.pkg.dev`)
#   OCI_REGISTRY: The name of the OCI registry (e.g.: `my-project/my-registry`)
#   CHART: The name of the Helm Chart (e.g.: `my-awesome-app`)
.deploy_to_oci_registry:
  script:
    - echo "Deploy to OCI registry"
    - helm package .
    - helm push ${CHART}-${CI_COMMIT_TAG}.tgz oci://${OCI_HOST}/${OCI_REGISTRY}
  rules:
    - if: $CI_COMMIT_TAG

# https://yamllint.readthedocs.io
# This Gitlab job performs linting on yaml files generated by an helm template command.
# The linting rules have been optimised in the `YAMLLINT_CONFIG_FILE` as to avoid
# checking those elements that are out of our control.
.helmcharts_yamllint:
  variables:
    YAMLLINT_CONFIG_FILE: /configs/helmcharts.yamllint.yaml
    FILE_OR_DIR: yaml
  script:
    - yamllint ${FILE_OR_DIR}

# This Gitlab job template checks that the version of the Chart is the same as the tag build.
.check_version:
  script:
    - export CHART_VERSION=`cat ${CI_PROJECT_DIR}/Chart.yaml | grep version  | head -1 | awk '{ print $2 }'`
    - if [[ $CI_COMMIT_TAG != *$CHART_VERSION* ]] ; then  echo 'Chart version and tag build mismatch'; exit 1 ; fi
  rules:
    - if: $CI_COMMIT_TAG
