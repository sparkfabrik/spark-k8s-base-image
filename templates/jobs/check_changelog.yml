#1) MERGE_BASE_SHA is A
#       o--o--o SOURCE
#      /
#--o--A TARGET
#
#2) MERGE_BASE_SHA is A
#       o--o--o SOURCE
#      /
#--o--A--o--o--o TARGET
#
#3) MERGE_BASE_SHA is B
#       o--o--o---o SOURCE
#      /         /
#--o--A--o--o--B TARGET
.check-changelog-base:
  script:
    # Safeguard to make the job actually run when at least one of the vars is set.
    - |
      if ([ -z "$SOURCE_REF" ] || [ -z "$TARGET_REF" ]) && [ -z "$CI_COMMIT_TAG" ]; then
        echo 'SOURCE_REF or TARGET_REF and CI_COMMIT_TAG are empty, bailing out.'
        echo "SOURCE_REF=$SOURCE_REF"
        echo "TARGET_REF=$TARGET_REF"
        echo "CI_COMMIT_TAG=$CI_COMMIT_TAG"
        exit 0
      fi
    # If the branch is a fix the check will be skipped
    - |
      if [ -n "$(echo "${CI_COMMIT_REF_NAME}" | grep -E "^fix\/.+")" ]; then
        echo 'Found fix/.+ branch name, bailing out.'
        exit 0
      fi
    # If the pipeline is running for a tag, we check if the tag is present in the changelog
    # otherwise the CHANGELOG.md should be edited
    - |
      if [ -n "${CI_COMMIT_TAG}" ]; then
        echo "Checking presence of $CI_COMMIT_TAG in CHANGELOG.md"
        grep "${CI_COMMIT_TAG}" CHANGELOG.md || exit_code=$?
      else
        echo "Checking if CHANGELOG.md has been modified in the branch ${SOURCE_REF}"
        cd ${CI_PROJECT_DIR}
        git fetch --all
        MERGE_BASE_SHA=$(git merge-base $SOURCE_REF $TARGET_REF)
        echo "MERGE_BASE_SHA $MERGE_BASE_SHA"
        git --no-pager diff --name-only ${MERGE_BASE_SHA} ${SOURCE_REF} | grep CHANGELOG.md >/dev/null || exit_code=$?
      fi
    - |
      if [ ${exit_code:-0} -ne 0 ]; then
        echo ah... ah... ah...
        echo https://i.imgflip.com/5gp2wa.gif
        exit 1
      fi

# This job template can be added to projects that include in the CI file:
#  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'
# See
# https://docs.gitlab.com/ee/ci/yaml/workflow.html#workflowrules-templates
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Workflows/MergeRequest-Pipelines.gitlab-ci.yml
# In order to configure this job to run only for merge requests and tags (and not on the default branch after a merge)
# we use rules to restrict the job even further.
.check-changelog:
  variables:
    SOURCE_REF: $CI_COMMIT_SHA
    TARGET_REF: origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  extends:
    - .check-changelog-base
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG

# This job that should be used on branch pipelines (no merge request pipelines)
.check-changelog-standard-pipelines:
  variables:
    SOURCE_REF: $CI_COMMIT_SHA
    TARGET_REF: origin/$CI_DEFAULT_BRANCH
  extends:
    - .check-changelog-base
