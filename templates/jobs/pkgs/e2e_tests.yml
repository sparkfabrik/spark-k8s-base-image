.sparkfabrik-pkg-e2e-test:
  variables:
    CI_TO_TEST: /builds/newproject/.gitlab-ci.yml
    PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_URL: ${CI_PROJECT_URL}
    PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_REF: ${CI_COMMIT_SHA}
  script:
    - docker run --rm
      -e PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_URL
      -e PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_REF
      -e COMPOSER_AUTH
      -v /builds:/usr/src/app
      eu.gcr.io/spark-int-cloud-services/fs-cli:latest pkg:init newproject testprojectname testvendorname -n
    - >
      docker run --rm
      -e PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_URL
      -e PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_REF
      -e COMPOSER_AUTH
      -v /builds/newproject:/usr/src/app
      eu.gcr.io/spark-int-cloud-services/fs-cli:latest pkg:composer config repositories.${PKG_NAME} "'{ \"type\": \"path\", \"url\": \"/pkg_test\", \"options\": { \"symlink\": false } }'"
    - docker run --rm
      -e PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_URL
      -e PKG_COMPOSER_PLUGIN_FAKE_GITLABCI_SOURCE_REF
      -e COMPOSER_AUTH
      -v /builds/newproject:/usr/src/app
      -v ${CI_PROJECT_DIR}:/pkg_test
      eu.gcr.io/spark-int-cloud-services/fs-cli:latest pkg:require sparkfabrik/${PKG_NAME}
    - "sed -i '/- local: ..*/d' ${CI_TO_TEST}"
    - >
      export LINT_VAL=$(jq --null-input --arg yaml "$(<${CI_TO_TEST})" '.content=$yaml' \
        | curl "https://gitlab.sparkfabrik.com/api/v4/ci/lint" \
        --silent \
        --header 'Content-Type: application/json' \
        --header "PRIVATE-TOKEN: ${LINT_CI_TOKEN}" \
        --data @- \
        | jq --raw-output '.status')
    - "echo Lint val: ${LINT_VAL}"
    - >
      if [ "${LINT_VAL}" != "valid" ]; then
        exit 1
      fi
  after_script:
    - mv /builds/newproject newproject # we move the files here to gather artifacts and suppress warnings.
  artifacts:
    paths:
      - newproject
    expire_in: 1 day
    when: always