include:
  - remote: "https://raw.githubusercontent.com/sparkfabrik/spark-k8s-deployer/master/templates/.gitlab-ci-template.yml"

stages:
  - build
  - test
  - deploy
  - cleanup

variables:
  KUBE_DOMAIN: ci.sparkfabrik.cloud
  SPARK_PRJ_VENDOR: YOUR_VENDOR
  CI_REGISTRY_IMAGE_DB: gcr.io/spark-int-cloud-services/YOUR_VENDOR-db
  CI_REGISTRY_IMAGE_CODE: gcr.io/spark-int-cloud-services/YOUR_VENDOR-code
  CI_ENVIRONMENT_URL: https://${CI_BUILD_REF_SLUG}.${SPARK_PRJ_VENDOR}.${KUBE_DOMAIN}

build:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE_CODE:$CI_BUILD_REF_SLUG" .
    - gcloud docker -- push "$CI_REGISTRY_IMAGE_CODE:$CI_BUILD_REF_SLUG"

test:
  stage: test
  script:
    - make COMPOSE_FILE_TYPE=ci all dump-database destroy
    - docker build -t "$CI_REGISTRY_IMAGE_DB:$CI_BUILD_REF_SLUG" -f docker/images/mariadb/Dockerfile .
    - gcloud docker -- push "$CI_REGISTRY_IMAGE_DB:$CI_BUILD_REF_SLUG"

deploy:
  stage: deploy
  script:
    - command /scripts/deploy
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: https://${CI_BUILD_REF_SLUG}.${SPARK_PRJ_VENDOR}.${KUBE_DOMAIN}
    on_stop: delete_deploy
  only:
    - develop
  artifacts:
    paths:
      - k8s/

delete_deploy:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - command destroy
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  when: manual
  only:
    - develop
